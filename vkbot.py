from pprint import pprint

import requests
import json
from datetime import date, datetime
from dateutil import relativedelta

from private.private import token, my_token, user_id


class VkBot:
    def __init__(self, vk_token, user_id, version="5.131"):
        self.user_id = user_id
        self.base_url = 'https://api.vk.com/method/'
        self.token = vk_token
        self.version = version
        self.params = {'access_token': self.token, 'v': self.version}
        self.user_first_name = None
        self.user_last_name = None
        self.user_sex = None
        self.user_bdate = None
        self.user_city = None

        self.test_commands = ["–ì–û–†–û–î", "–ü–û–õ", "–í–û–ó–†–ê–°–¢", "–ò–ú–Ø", "–§–ê–ú–ò–õ–ò–Ø", "–§–û–¢–û"]
        self.commands = ["–ü–†–ò–í–ï–¢", "–ü–û–ö–ê", "–ù–ê–ô–¢–ò –ü–ê–†–£", "–î–û–ë–ê–í–ò–¢–¨ –ü–†–ï–î–ü–û–ß–¢–ï–ù–ò–Ø", "–°–õ–ï–î–£–Æ–©–ò–ô", "–ü–û–î–•–û–î–ò–¢",
                         "–ù–ï –ü–û–î–•–û–î–ò–¢", "–ü–û–ö–ê–ó–ê–¢–¨ –ê–ù–ö–ï–¢–£"]

    # –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def get_user_data(self):
        url = self.base_url + 'users.get?'
        param = {
            **self.params,
            'user_ids': self.user_id,
            'fields': 'city, sex, bdate, about'
        }
        response = requests.get(url, params=param)

        assert response.status_code == 200
        data = response.json()['response'][0]

        self.user_first_name = data.get('first_name')

        self.user_last_name = data.get('last_name')

        if data.get('sex') == 1:
            self.user_sex = '–ñ–µ–Ω—Å–∫–∏–π'
        elif data.get('sex') == 2:
            self.user_sex = '–ú—É–∂—Å–∫–æ–π'
        else:
            self.user_sex = '–ù–µ —É–∫–∞–∑–∞–Ω'

        self.user_city = data['city'].get('title')

        try:
            day1, month1, year1 = data.get('bdate').split('.')
            date1 = datetime(int(year1), int(month1), int(day1))
            day2, month2, year2 = date.today().strftime('%d.%m.%Y').split('.')
            date2 = datetime(int(year2), int(month2), int(day2))
            diff = relativedelta.relativedelta(date2, date1)
            years = diff.years

            self.user_bdate = '{} –ª–µ—Ç(–≥–æ–¥–∞)'.format(years)
        except:
            return '–í–∞–º –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑.'


    def get_photo_id(self, my_token):
        url = f"{self.base_url}photos.get"
        param = {
            'access_token': my_token,
            'v': self.version,
            "owner_id": self.user_id,
            "album_id": "profile",
            "extended": 1
        }
        response = requests.get(url, params=param)
        photos_dict = {}
        # –≤–≤–æ–¥–∏–º —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á–æ–º –±—É–¥–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ–º - id —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        # –≤ —Ü–∏–∫–ª–µ –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ–º —Å–ª–æ–≤–∞—Ä—å
        for photo in response.json()['response']['items']:
            likes_count = photo['likes']['count']
            photo_id = photo['id']
            photos_dict[likes_count] = photo_id

        photos_id = []
        # –ü–æ–ª—É—á–∞–µ–º 1 —Ñ–æ—Ç–æ
        inverse = [key for key in photos_dict.keys()]
        max_key = max(inverse)
        photos_id.append(photos_dict.pop(max_key))
        # –ü–æ–ª—É—á–∞–µ–º 2 —Ñ–æ—Ç–æ
        inverse = [key for key in photos_dict.keys()]
        max_key = max(inverse)
        photos_id.append(photos_dict.pop(max_key))
        # –ü–æ–ª—É—á–∞–µ–º 3 —Ñ–æ—Ç–æ
        inverse = [key for key in photos_dict.keys()]
        max_key = max(inverse)
        photos_id.append(photos_dict.pop(max_key))

        return photos_id

    def send_photo(self, owner_id):
        url = f"{self.base_url}messages.send"

        all_photo = []
        photo_ids = self.get_photo_id(my_token)
        for photo_id in photo_ids:
            param = {
                **self.params,
                'user_id': self.user_id,
                'random_id': 0,
                'attachment': f'photo{owner_id}_{photo_id}'
            }

            response = requests.get(url, params=param)
            all_photo.append(response.json())
        return all_photo

    #–º–µ—Ç–æ–¥, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –±–æ—Ç—É –Ω–∞–π—Ç–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π
    def find_lover(self):
        pass

    # –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def get_preferences(self):
        pass

    # –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∏–∑–±—Ä–∞–Ω–Ω—ã–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ã
    def add_favorite(self):
        pass

    # –º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
    def add_blacklist(self):
        pass

    # –º–µ—Ç–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    def next_user(self):
        pass

    # –º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–≤–æ—Ä–∏—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def show_favorite(self):
        pass

    # –º–µ—Ç–æ–¥ –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ—Ö –∏–ª–∏ –∏–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    def new_message(self, message):
        # –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ "—Å—Ç–∞—Ä—Ç–∞" —Å –±–æ—Ç–æ–º –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        # –∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –±–¥
        self.get_user_data()

        #–≤ —ç—Ç–æ–º –º–µ—Ç–æ–¥–µ —Ç–∞–∫–∂–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –±–¥, –∞ –Ω–µ –≤—ã–≤–µ–¥–µ–Ω–∏–µ –∏—Ö —Å—Ä–∞–∑—É –≤ —á–∞—Ç
        self.get_photo_id(my_token)
        if message.upper() == self.commands[0]:
            # –Ω—É–∂–Ω—ã –ª–∏ –Ω–∞–º –≤ —ç—Ç–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –ø–æ–º–∏–º–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –≤–æ–∑–º–∂–Ω–æ—Å—Ç–∏?
            if self.user_city is None:

                # –≤ –±—É–¥—É—â–µ–º –ø–µ—Ä–µ–Ω–µ—Å–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—à–µ—Ç —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ "–Ω–∞–π—Ç–∏ –ø–∞—Ä—É"
                send_message = f"–ü—Ä–∏–≤–µ—Ç, {self.user_first_name}! –¢–µ–±–µ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º —Ç—ã –∂–∏–≤–µ—à—å, –∏–Ω–∞—á–µ —è –Ω–µ —Å–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ç–µ–±–µ –ø–∞—Ä—É"
            else:
                send_message = f"–ü—Ä–∏–≤–µ—Ç, {self.user_first_name}!"
            return send_message

        elif message.upper() == self.commands[1]:
            return f"–î–æ –≤—Å—Ç—Ä–µ—á–∏, {self.user_first_name}!"

        #test
        #–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–≤–∞—à –≤–≤–µ–¥–µ–Ω–Ω—ã–π user_id)
        #–≤ –±—É–¥—É—â–µ–º –≤—Å–µ —ç—Ç–∏ –º–µ—Ç–æ–¥—ã –¥–æ–ª–∂–Ω—ã –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–π —Ç–µ–±–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤
        #–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤ –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ "—Å—Ç–∞—Ä—Ç–∞" —Å –±–æ—Ç–æ–º –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ –±–¥
        elif message.upper() == self.test_commands[0]:
            send_message = f"–¢–≤–æ–π –≥–æ—Ä–æ–¥ - {self.user_city}"
            return send_message
        elif message.upper() == self.test_commands[1]:
            send_message = f"–¢–≤–æ–π –ø–æ–ª - {self.user_sex}"
            return send_message
        elif message.upper() == self.test_commands[2]:
            send_message = f"–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç - {self.user_bdate}"
            return send_message
        elif message.upper() == self.test_commands[3]:
            send_message = f"–¢–≤–æ–µ –∏–º—è - {self.user_first_name}"
            return send_message
        elif message.upper() == self.test_commands[4]:
            send_message = f"–¢–≤–æ—è —Ñ–∞–º–∏–ª–∏—è - {self.user_last_name}"
            return send_message
        elif message.upper() == self.test_commands[5]:
            self.send_photo(self.user_id)
            send_message = f"–í–æ—Ç —Ç–≤–æ–µ —Ñ–æ—Ç–æ"
            return send_message

        else:
            return "–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. üòû"


if __name__ == '__main__':
    user_id = user_id #—Ç—É—Ç –∏–ø–æ–ª—å–∑—É–π—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∞–º —É–¥–æ–±–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ
    vk_token = token #—Ç–æ–∫–µ–Ω —Å–æ–æ–±—â–µ—Å—Ç–≤–∞

    VK = VkBot(vk_token, user_id)
    get_user = VK.get_user_data()
    print(
        f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:\n–ò–º—è: {VK.user_first_name}\n–§–∞–º–∏–ª–∏—è: {VK.user_last_name}\n–ü–æ–ª: {VK.user_sex}\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {VK.user_bdate}\n–ì–æ—Ä–æ–¥: {VK.user_city}')
