import requests
import json
from datetime import date


class VkBot:
    def __init__(self, vk_token, user_id, version="5.131"):
        self.user_id = user_id
        self.base_url = 'https://api.vk.com/method/'
        self.token = vk_token
        self.version = version
        self.params = {'access_token': self.token, 'v': self.version}

        self.commands = ["–ü–†–ò–í–ï–¢", "–ü–û–ö–ê", "–ú–û–ô –ì–û–†–û–î", "–ú–û–ô –ü–û–õ"]

    #–º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥–æ—Ä–æ–¥–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –∂–∏–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    def get_home_town(self):
        url = self.base_url + 'users.get?'
        param = {
            **self.params,
            'user_ids': self.user_id,
            'fields': 'home_town'
        }
        response = requests.get(url, params=param)
        try:
            users_town = response.json()['response'][0]['home_town']
            return users_town
        except:
            return '–†–æ–¥–Ω–æ–π –≥–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω'

    def get_city(self):
        url = self.base_url + 'users.get?'
        param = {
            **self.params,
            'user_ids': self.user_id,
            'fields': 'city'
        }
        response = requests.get(url, params=param)
        try:
            users_city = response.json()['response'][0]['title']
            return users_city
        except:
            return '–ì–æ—Ä–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω'

    #–º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–∞
    def get_sex(self):
        url = self.base_url + 'users.get?'
        param = {
            **self.params,
            'user_ids': self.user_id,
            'fields': 'sex'
        }
        response = requests.get(url, params=param)
        sex = response.json()['response'][0]['sex']
        if sex == 1:
            user_gender = '–ñ–µ–Ω—Å–∫–∏–π –ø–æ–ª'
        elif sex == 2:
            user_gender = '–ú—É–∂—Å–∫–æ–π –ø–æ–ª'
        else:
            user_gender = '–ü–æ–ª –Ω–µ —É–∫–∞–∑–∞–Ω'
        return user_gender


    #–º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏(
    # get_name()[0] - –∏–º—è
    # get_name()[1] - —Ñ–∞–º–∏–ª–∏—è
    # )
    def get_name(self):
        url = self.base_url + 'users.get?'
        param = {
            **self.params,
            'user_ids': self.user_id,
            'fields': 'about'

        }
        response = requests.get(url, params=param)
        self.user_first_name = response.json()['response'][0]['first_name']
        self.user_last_name = response.json()['response'][0]['last_name']

        return self.user_first_name, self.user_last_name

    #–º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞(–Ω—É–∂–Ω–æ –¥–æ–¥–µ–ª–∞—Ç—å, –ª–∏–±–æ —è –ø–ª–æ—Ö–æ –∏—Å–∫–∞–ª–∞ –∏ –Ω–µ –Ω–∞—à–ª–∞ –Ω—É–∂–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞)
    def get_age(self):
        url = self.base_url + 'users.get?'
        param = {
            **self.params,
            'user_ids': self.user_id,
            'fields': 'bdate'
        }
        response = requests.get(url, params=param)
        try:
            birth_date = response.json()['response'][0]['bdate']
            time_now = date.today().strftime('%d.%m.%Y')

            #—Ç—É—Ç –±—É–¥–µ—Ç –∫–æ–¥ –¥–ª—è –≤—ã—á–µ—Å–ª–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞

            return birth_date, time_now
        except:
            return '–ì–æ–¥ –∏–ª–∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞'

    #–º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è 3 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ª–∞–π–∫–æ–≤
    def get_photo(self, user_id, count=3):
        pass

    #–º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–≤–æ—Ä–∏—Ç–∞ –≤ –±–¥
    def add_favorite(self):
        pass

    #–º–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
    def add_blacklist(self):
        pass

    #–º–µ—Ç–æ–¥ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    def next_user(self):
        pass

    #–º–µ—Ç–æ–¥, –≤—ã–≤–æ–¥—è—â–∏–π —Å–ø–∏—Å–æ–∫ —Ñ–∞–≤–æ—Ä–∏—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def show_favorite(self):
        pass

    #–º–µ—Ç–æ–¥ –ø–æ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ—Ö –∏–ª–∏ –∏–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    def new_message(self, message):
        if message.upper() == self.commands[0]:
            return f"–ü—Ä–∏–≤–µ—Ç, {self.get_name()[0]}!"

        elif message.upper() == self.commands[1]:
            return f"–î–æ –≤—Å—Ç—Ä–µ—á–∏, {self.get_name()[0]}!"
        #–ø—Ä–æ–≤–µ—Ä—è—é –Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        elif message.upper() == self.commands[2]:
            town = [self.get_home_town(),  self.get_city()]
            return town
        #–ø—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–¥–æ—Ç–æ–¥–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –≥–µ–Ω–¥–µ—Ä–∞
        elif message.upper() == self.commands[3]:
            return self.get_sex()
        else:
            return "–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã. üòû"